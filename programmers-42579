#include <algorithm>
#include <vector>
#include <map>

using namespace std;

bool CompareGenere(pair<string, int> A, pair<string, int> B)
{
    return A.second > B.second;
}

bool ComparePlay(pair<int, int> A, pair<int, int> B)
{
    if(A.second == B.second)
        return A.first < B.first;
    return A.second > B.second;
}

vector<int> solution(vector<string> genres, vector<int> plays) {
    vector<int> answer;
    map<string, int> sums;
    map<string, vector<pair<int, int>>> play_list; 
    
    for(int i = 0; i < plays.size(); ++i)
    {
        sums[genres[i]] += plays[i];
        play_list[genres[i]].push_back(make_pair(i, plays[i]));
    }
    
    vector<pair<string, int>> sum_of_plays(sums.begin(), sums.end());
    sort(sum_of_plays.begin(), sum_of_plays.end(), CompareGenere);
    for(auto genere : sum_of_plays)
    {
        sort(play_list[genere.first].begin(), play_list[genere.first].end(), ComparePlay);
        answer.push_back(play_list[genere.first][0].first);
        if(play_list[genere.first].size() > 1)
            answer.push_back(play_list[genere.first][1].first);
    }
   
        
    return answer;
}
