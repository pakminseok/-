#include <iostream>
#include <cstring>

#define UP 0
#define DOWN 1
#define LEFT 2
#define RIGHT 3

using namespace std;

bool is_stop;
char codes[20][20];
bool visit[20][20][4][16]; //row, col, direction, memory
int R, C, memory;

int Dr[4] = {-1, 1, 0, 0}; // up, down, left, right
int Dc[4] = {0, 0, -1, 1};

void move(int row, int col, int direction)
{
    if(visit[row][col][direction][memory]) return;
    
    visit[row][col][direction][memory] = true; 

    if(codes[row][col] == '@')
    {
        is_stop = true;
        return;
    }
    
    else if(codes[row][col] == '?')
    {
        for(int d=0; d<4; ++d)
        {
            int next_row = row + Dr[d];
        	  if(next_row < 0)
                next_row = R-1;
            else if(next_row > R-1)
                next_row = 0;
            
            int next_col = col + Dc[d];
            if(next_col < 0)
                next_col = C-1;
            else if(next_col > C-1)
                next_col = 0;
            
            move(next_row, next_col, d);
        }
    }
    
    else 
    {
        if('0' <= codes[row][col] && codes[row][col] <= '9')
            memory = codes[row][col] - '0';
        else if(codes[row][col] == '+')
            memory = (memory == 15) ? 0: memory+1;
        else if(codes[row][col] == '-')
            memory = (memory == 0) ? 15 : memory-1;
        else if(codes[row][col] == '^' || (codes[row][col] == '|' && memory != 0))
            direction = UP;
        else if(codes[row][col] == 'v' || (codes[row][col] == '|' && memory == 0))
            direction = DOWN;
        else if(codes[row][col] == '<' || (codes[row][col] == '_' && memory != 0))
            direction = LEFT;
        else if(codes[row][col] == '>' || (codes[row][col] == '_' && memory == 0))
            direction = RIGHT;
        
        row += Dr[direction];
        if(row < 0)
            row = R-1;
        else if(row > R-1)
            row = 0;
        
        col += Dc[direction];
        if(col < 0)
            col = C-1;
        else if(col > C-1)
            col = 0;
        
        move(row, col, direction);
    }
}

int main()
{
    int T;
    cin >> T;
    
    for(int test_case = 1; test_case <= T; ++test_case)
    {
        cin >> R >> C;
       	
        is_stop = false;
		    memset(visit, false, sizeof(visit));
        memory = 0;
        
        for(int row =0; row< R; ++row)
            for(int col=0; col<C; ++col)
            	cin >> codes[row][col];

        move(0, 0, RIGHT);//default_direction = right
        cout<<"#"<<test_case<<" "<<(is_stop ? "YES" : "NO")<<endl;
    }
    return 0;
}
