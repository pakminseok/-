#include<iostream>
#include <algorithm>
#include <cstring>

#define MAX_SIZE 8
using namespace std;

int N, K;
int Road[MAX_SIZE][MAX_SIZE];
bool visit[MAX_SIZE][MAX_SIZE];

int answer;
int max_height;

int Dr[4] = {-1, 1, 0, 0};
int Dc[4] = {0, 0, -1, 1};

void MakeLine(int row, int col, int length_line, bool cut)
{
    visit[row][col] = true;
    answer = max(answer, length_line);
    for(int direction = 0; direction < 4; ++direction)
    {
        int next_row = row + Dr[direction];
        int next_col = col + Dc[direction];
        
        if(next_row < 0 || next_row > N-1 || next_col < 0 || next_col > N-1) continue;
        
        if(visit[next_row][next_col]) continue;
        
        if(Road[row][col] > Road[next_row][next_col]) 
        {
            visit[next_row][next_col] = true;
            MakeLine(next_row, next_col, length_line+1, cut);
            visit[next_row][next_col] = false;
        }
        
        else if(Road[row][col] <= Road[next_row][next_col] && !cut)
        {
            for(int cut_height = 1; cut_height <= K; ++cut_height)
            {
				        int current_height = Road[next_row][next_col];
                Road[next_row][next_col] -= cut_height;
                
                if(Road[row][col] > Road[next_row][next_col]) 
                {
                    visit[next_row][next_col] = true;
                    MakeLine(next_row, next_col, length_line+1, true);
                    visit[next_row][next_col] = false;
                }
                
                Road[next_row][next_col] = current_height;
            }
        }
    }
    
    visit[row][col] = false;
}

int main(int argc, char** argv)
{
	int test_case;
	int T;
	cin>>T;
	
	for(test_case = 1; test_case <= T; ++test_case)
	{
		memset(visit, false, sizeof(visit));
		answer = 0;
		max_height = 0;

		cin >> N >> K;
		for(int row = 0; row < N; ++row)
		{
		    for(int col = 0; col < N; ++col)
		    {
			cin >> Road[row][col];
			max_height = max(max_height, Road[row][col]);
		    }
		}

		for(int row = 0; row < N; ++row)
		{
		    for(int col = 0; col < N; ++col)
		    {
			if(Road[row][col] == max_height)
			{
			    MakeLine(row, col, 1, false);
			}
		    }
		}
		
        	cout << "#" <<test_case<<" "<<answer<<endl;
	}
	
	return 0;
}
